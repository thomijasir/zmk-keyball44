#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "QWRT";
            bindings = <
&kp ESCAPE      &kp Q             &kp W              &kp E             &kp R              &kp T                 &kp Y            &kp U               &kp I              &kp O               &kp P                 &kp BACKSPACE
&kp TAB         &hrm_left LALT A  &hrm_left LCTRL S  &hrm_left LCMD D  &hrm_left LSHFT F  &kp G                 &kp H            &hrm_right RSHFT J  &hrm_right RCMD K  &hrm_right LCTRL L  &hrm_right RALT SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z             &kp X              &kp C             &kp V              &kp B                 &kp N            &kp M               &kp COMMA          &kp DOT             &kp SLASH             &kp RIGHT_SHIFT
&kp LGUI        &kp LALT          &mt LSHFT ESCAPE   &lt 4 SPACE       &lt 5 TAB                     &kp ENTER  &lt 1 BACKSPACE                                                                                   &kp DELETE
            >;
        };

        symbol {
            label = "SYM";
            bindings = <
&none   &kp EXCLAMATION       &kp AT_SIGN                   &kp HASH                 &kp DOLLAR               &kp LEFT_PARENTHESIS              &kp RIGHT_PARENTHESIS  &kp AMPERSAND                &kp ASTERISK              &kp PIPE                        &kp NON_US_BACKSLASH   &none
&none   &hrm_left LALT GRAVE  &hrm_left LCTRL SINGLE_QUOTE  &hrm_left LCMD KP_MINUS  &hrm_left LSHFT KP_PLUS  &kp LEFT_BRACE                    &kp RIGHT_BRACE        &hrm_right RSHFT UNDERSCORE  &hrm_right RCMD KP_EQUAL  &hrm_right LCTRL DOUBLE_QUOTES  &hrm_right RALT TILDE  &none
&none   &kp CAPS              &trans                        &trans                   &kp PERCENT              &kp LEFT_BRACKET                  &kp RIGHT_BRACKET      &kp CARET                    &trans                    &trans                          &kp CAPS               &none
&trans  &trans                &trans                        &trans                   &trans                                             &trans  &trans                                                                                                                               &trans
            >;
        };

        number_nav {
            label = "NUM";
            bindings = <
&none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none   &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                     &none         &none         &none         &none         &none         &none
&none   &none         &none         &none         &none         &none                     &none         &none         &trans        &trans        &none         &none
&trans  &trans        &trans        &trans        &trans                          &trans  &trans                                                                &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none  &none  &none  &none  &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &none  &none  &none  &none  &none  &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &none  &none  &none  &none  &none  &none
&trans  &trans  &trans   &trans   &trans              &trans  &mo 3                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3        &kp N4     &kp N5              &kp N6         &kp N7     &kp N8  &kp N9     &kp N0     &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none               &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK  &none
&none   &none           &none           &none         &none      &none               &kp PAGE_DOWN  &none      &none   &none      &none      &none
&trans  &trans          &trans          &trans        &trans                 &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
